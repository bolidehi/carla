---
- module_name: carla
  doc: >
  # - CLASSES ------------------------------
  classes:
  - class_name: LaneType
    # - DESCRIPTION ------------------------
    doc: >
      All the possible lane types that OpenDRIVE accepts
    # - PROPERTIES -------------------------
    instance_variables:
    - var_name: NONE
      doc: >
    - var_name: Driving
      doc: >
    - var_name: Stop
      doc: >
    - var_name: Shoulder
      doc: >
    - var_name: Biking
      doc: >
    - var_name: Sidewalk
      doc: >
    - var_name: Border
      doc: >
    - var_name: Restricted
      doc: >
    - var_name: Parking
      doc: >
    - var_name: Bidirectional
      doc: >
    - var_name: Median
      doc: >
    - var_name: Special1
      doc: >
    - var_name: Special2
      doc: >
    - var_name: Special3
      doc: >
    - var_name: RoadWorks
      doc: >
    - var_name: Tram
      doc: >
    - var_name: Rail
      doc: >
    - var_name: Entry
      doc: >
    - var_name: Exit
      doc: >
    - var_name: OffRamp
      doc: >
    - var_name: OnRamp
      doc: >
    - var_name: Any
      doc: >

  - class_name: LaneChange
    # - DESCRIPTION ------------------------
    doc: >
      Defines the lane change options
    # - PROPERTIES -------------------------
    instance_variables:
    - var_name: NONE
      doc: >
        Traffic rules do not allow turning right or left, only going straight
    - var_name: Right
      doc: >
        Traffic rules allow turning right
    - var_name: Left
      doc: >
        Traffic rules allow turning left
    - var_name: Both
      doc: >
        Traffic rules allow turning right or left

  - class_name: LaneMarkingColor
    # - DESCRIPTION ------------------------
    doc: >
      Defines the lane marking colors
    # - PROPERTIES -------------------------
    instance_variables:
    - var_name: Standard
      doc: >
        Same as white
    - var_name: Blue
      doc: >
    - var_name: Green
      doc: >
    - var_name: Red
      doc: >
    - var_name: White
      doc: >
    - var_name: Yellow
      doc: >
    - var_name: Other
      doc: >

  - class_name: LaneMarkingType
    # - DESCRIPTION ------------------------
    doc: >
      Defines the lane marking types
    # - PROPERTIES -------------------------
    instance_variables:
    - var_name: NONE
      doc: >
    - var_name: Other
      doc: >
    - var_name: Broken
      doc: >
    - var_name: Solid
      doc: >
    - var_name: SolidSolid
      doc: >
    - var_name: SolidBroken
      doc: >
    - var_name: BrokenSolid
      doc: >
    - var_name: BrokenBroken
      doc: >
    - var_name: BottsDots
      doc: >
    - var_name: Grass
      doc: >
    - var_name: Curb
      doc: >

  - class_name: Map
    # - DESCRIPTION ------------------------
    doc: >
      Map description that provides a waypoint query system, that extracts
      the information from the OpenDRIVE file
    # - PROPERTIES -------------------------
    instance_variables:
    - var_name: name
      doc: >
        Map name. Comes from the Unreal's UMap name
    # - METHODS ----------------------------
    methods:
    - def_name: get_spawn_points
      params:
      - param_name: self
      return: 'list([carla.Transform](#carla.Transform))'
      doc: >
        Returns a list of transformations corresponding to the recommended spawn
        points over the map
    # --------------------------------------
    - def_name: get_waypoint
      doc: >
        Return the nearest [Waypoint](#carla.Waypoint) given a
        [Location](#carla.Location)
      params:
      - param_name: self
      - param_name: location
        type: "[Location](#carla.Location)"
        doc: > 
          Location where you want to get the [Waypoint](#carla.Waypoint)
      - param_name: project_to_road
        type: bool
        default: "True"
        doc: > 
          If **True**, the waypoint will be at the center of the nearest lane.
          If **False**, the waypoint will be at the given location. Also, in this case, the result may be `None` if the waypoint is not on a searched lane
      - param_name: lane_type
        type: "[carla.LaneType](#carla.LaneType)"
        default: carla.LaneType.Driving
        doc: > 
          This parameter is used to limit the search on certain lane types. 
          This can be used like a flag: `LaneType.Driving & LaneType.Shoulder`
      return: "[Waypoint](#carla.Waypoint)"
    # --------------------------------------
    - def_name: get_topology
      params:
      - param_name: self
      doc: >

        Provides a 
        The format is a list of pairs of waypoints, where the first waypoint is the origin and the second
        one is the destination, for instance, a valid output could be:
        `[ (w0, w1), (w0, w2), (w1, w3), (w2, w3) ]`
      return: list(tuple([Waypoint](#carla.Waypoint), [Waypoint](#carla.Waypoint)))
    # --------------------------------------
    - def_name: generate_waypoints
      params:
      - param_name: self
      - param_name: distance
        type: float
        doc: >
          Aproximate distance between the waypoints
      return: list([Waypoint](#carla.Waypoint))
      doc: >
        Returns a list of waypoints positioned on the center of the lanes 
        all over the map with an approximate distance between them.
    # --------------------------------------
    - def_name: transform_to_geolocation
      params:
      - param_name: self
      doc: >
    # --------------------------------------
    - def_name: to_opendrive
      params:
      - param_name: self
      doc: >
        Returns the OpenDRIVE of the current map as string
      return: str
    # --------------------------------------
    - def_name: save_to_disk
      params:
      - param_name: self
      - param_name: path
        doc: >
          Path where will be saved
      doc: >
        Save the OpenDRIVE of the current map to disk

  - class_name: LaneMarking
    # - DESCRIPTION ------------------------
    doc: >
    # - PROPERTIES -------------------------
    instance_variables:
    - var_name: type
      doc: >
    - var_name: color
      doc: >
    - var_name: lane_change
      doc: >
    - var_name: width
      doc: >

  - class_name: Waypoint
    # - DESCRIPTION ------------------------
    doc: >
    # - PROPERTIES -------------------------
    instance_variables:
    - var_name: id
      doc: >
    - var_name: transform
      doc: >
    - var_name: is_intersection
      doc: >
    - var_name: lane_width
      doc: >
    - var_name: road_id
      doc: >
    - var_name: section_id
      doc: >
    - var_name: lane_id
      doc: >
    - var_name: s
      doc: >
    - var_name: lane_change
      doc: >
    - var_name: lane_type
      doc: >
    - var_name: right_lane_marking
      doc: >
    - var_name: left_lane_marking
      doc: >
    # - METHODS ----------------------------
    methods:
    - def_name: next
      params:
      - param_name: self
      doc: >
    # --------------------------------------
    - def_name: get_right_lane
      params:
      - param_name: self
      doc: >
    # --------------------------------------
    - def_name: get_left_lane
      params:
      - param_name: self
      doc: >
    # --------------------------------------
...
